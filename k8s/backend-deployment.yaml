apiVersion: apps/v1
kind: Deployment
metadata:
  name: anomaly-backend
  namespace: anomaly
  labels:
    app: anomaly-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: anomaly-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: anomaly-backend
    spec:
      containers:
        - name: app
          image: anomaly-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: TRAIN_IF_MISSING
              value: "1"
            - name: MODEL_DIR
              value: "/models"
            - name: WORKERS
              value: "2"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 2
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "512Mi"
          volumeMounts:
            - name: model-store
              mountPath: /models
      volumes:
        - name: model-store
          emptyDir: {}
